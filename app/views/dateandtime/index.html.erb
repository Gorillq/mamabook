<body>
  <div class="section has-background-success-95">
    <div class="container has-background-success-95">
      <div class="columns">
        <div class="column is-one-third is-centered">
          <div id="infoBox" class="notification is-warning" style="display: none;"></div>
        </div>
      </div>
      <div class="columns">
        <div class="column is-one-third has-background-info-95 font-inter">
          <div id="calendar">
            <%= month_calendar do |date| %>
              <div class="calendar-day font-lobster" data-date="<%= date.strftime("%Y-%m-%d") %>">
                <div class="hero" id="herohero<%= date.strftime("%Y%m%d") %>">
                  <%= date.day %>
                </div>
              </div>
            <% end %>
          </div>
        </div>
<div class="column is-one-fifths"></div>
        <div class="column is-half">
          <div class="section is-small font-inter">
            <%= form_with model: @reserve_form, url: "create_event", method: :post, local: true do |form| %>
              <div class="field">
                <%= form.label :first_name, "First Name", class: "label has-text-centered has-text-weight-bold" %>
                <div class="control">
                  <%= form.text_field :first_name, class: "input is-link" %>
                </div>
                <% if @reserve_form.errors[:first_name].any? %>
                  <p class="help is-danger"><%= @reserve_form.errors[:first_name].first %></p>
                <% end %>
              </div>

              <div class="field">
                <%= form.label :last_name, "Last Name", class: "label has-text-centered has-text-weight-bold" %>
                <div class="control">
                  <%= form.text_field :last_name, class: "input is-link" %>
                </div>
                <% if @reserve_form.errors[:last_name].any? %>
                  <p class="help is-danger"><%= @reserve_form.errors[:last_name].first %></p>
                <% end %>
              </div>

              <div class="field">
                <%= form.label :email, "E-mail", class: "label has-text-centered has-text-weight-bold" %>
                <div class="control">
                  <%= form.email_field :email, class: "input is-link" %>
                </div>
                <% if @reserve_form.errors[:email].any? %>
                  <p class="help is-danger"><%= @reserve_form.errors[:email].first %></p>
                <% end %>
              </div>

              <div class="field has-text-centered">
                <%= form.label :date_arrival, "Date arrival", class: "label has-text-centered has-text-weight-semibold" %>
                <div class="control">
                  <%= form.date_field :date_arrival, id: 'date_arrival', class: 'select is-focused is-large' %>
                </div>
                <% if @reserve_form.errors[:date_arrival].any? %>
                  <p class="help is-danger"><%= @reserve_form.errors[:date_arrival].first %></p>
                <% end %>
              </div>

              <div class="field has-text-centered">
                <%= form.label :date_departure, "Date departure", class: "label has-text-centered has-text-weight-semibold" %>
                <div class="control">
                  <%= form.date_field :date_departure, id: 'date_departure', class: 'select is-focused is-large' %>
                </div>
                <% if @reserve_form.errors[:date_departure].any? %>
                  <p class="help is-danger"><%= @reserve_form.errors[:date_departure].first %></p>
                <% end %>
              </div>

              <div class="column has-text-centered">
                <%= form.submit "Next", class: "button is-large has-background-info-60 is-rounded" %>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function() {
        let firstClick = null;
        let secondClick = null;
        const calendarDays = document.querySelectorAll(".calendar-day");
        const today = new Date(); // today
        const MIN_DAYS = 2; 
        const infoBox = document.getElementById('infoBox');
        const form = document.querySelector('form');

        calendarDays.forEach(day => {
          const date = new Date(day.getAttribute('data-date'));

          //future
          if (date > today) {
            day.addEventListener("click", function() {
              const hero = this.querySelector('.hero');
              const clickedDate = this.getAttribute('data-date');

//remove
              calendarDays.forEach(d => {
                d.querySelector('.hero').classList.remove('is-link');
              });

              if (!firstClick) {
                // First click
                firstClick = clickedDate;
                hero.classList.add('is-link');
                document.getElementById('date_arrival').value = firstClick;
              } else if (!secondClick) {
                // Second click
                let startDate = new Date(firstClick);
                let endDate = new Date(clickedDate);

                if (startDate > endDate) {
                  [startDate, endDate] = [endDate, startDate];
                }

                const dayDifference = (endDate - startDate) / (1000 * 60 * 60 * 24);

                if (dayDifference >= MIN_DAYS) { 
                  secondClick = clickedDate;

                  if (new Date(firstClick) > new Date(secondClick)) {
                    document.getElementById('date_arrival').value = secondClick;
                    document.getElementById('date_departure').value = firstClick;
                  } else {
                    document.getElementById('date_departure').value = secondClick;
                  }
//range
                  while (startDate <= endDate) {
                    const dayElement = document.querySelector(`[data-date="${startDate.toISOString().split('T')[0]}"]`);
                    if (dayElement) {
                      dayElement.querySelector('.hero').classList.add('is-link');
                    }
                    startDate.setDate(startDate.getDate() + 1);
                  }

                  firstClick = null;
                  secondClick = null;
                } else {
                  hero.classList.add('is-link');
                  infoBox.textContent = `Minimum stay is ${MIN_DAYS} days.`;
                  infoBox.style.display = 'block';
                }
              } else {
                hero.classList.add('is-link');
                document.getElementById('date_arrival').value = clickedDate;
                document.getElementById('date_departure').value = '';
                firstClick = clickedDate;
                secondClick = null;
              }
            });
          } else {
            day.style.cursor = 'not-allowed';
            day.classList.add('is-disabled');
          }
        });

        form.addEventListener('submit', function(event) {
          const dateArrival = new Date(document.getElementById('date_arrival').value);
          const dateDeparture = new Date(document.getElementById('date_departure').value);
          const dayDifference = (dateDeparture - dateArrival) / (1000 * 60 * 60 * 24);

          if (dateArrival >= dateDeparture || dayDifference < MIN_DAYS) {
            event.preventDefault();
            infoBox.textContent = `Please ensure the departure date is after the arrival date and the minimum stay is ${MIN_DAYS} days.`;
            infoBox.style.display = 'block';
          }
        });
      });
    </script>
